events {}

http {
  # upstream nodes {
  #   # enable sticky session with either "hash" (uses the complete IP address)
  #   hash $remote_addr consistent;
  #   # or "ip_hash" (uses the first three octets of the client IPv4 address, or the entire IPv6 address)
  #   # ip_hash;
  #   # or "sticky" (needs commercial subscription)
  #   # sticky cookie srv_id expires=1h domain=.example.com path=/;

  #   server host.docker.internal:6001;
  #   server host.docker.internal:6002;
  #   server host.docker.internal:6003;
  #   server host.docker.internal:6004;
  # }

  upstream socket_io_servers {
    # enable sticky session with either "hash" (uses the complete IP address)
    # hash $remote_addr consistent;
    # or "ip_hash" (uses the first three octets of the client IPv4 address, or the entire IPv6 address)
    # ip_hash;
    # or "sticky" (needs commercial subscription)
    # sticky cookie srv_id expires=1h domain=.example.com path=/;

    server host.docker.internal:6001;
    server host.docker.internal:6002;
    server host.docker.internal:6003;
    server host.docker.internal:6004;
  }

  server {
    listen 7070;
    server_name localhost;

    # location / {
    #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #   proxy_set_header Host $host;
    #   proxy_pass http://nodes/;

    #   # enable WebSockets
    #   proxy_http_version 1.1;
    #   proxy_set_header Upgrade $http_upgrade;
    #   proxy_set_header Connection "upgrade";
    # }

    location /socket.io/ {
        proxy_pass http://socket_io_servers;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }
  }
}